[gd_scene load_steps=17 format=2]

[ext_resource path="res://MainScene/MainScene.gd" type="Script" id=1]
[ext_resource path="res://Scenes/SceneHandler.tscn" type="PackedScene" id=2]
[ext_resource path="res://Themes/Classic95/Classic95.tres" type="Theme" id=3]
[ext_resource path="res://MainScene/logo.png" type="Texture" id=4]
[ext_resource path="res://MainScene/videoicon.png" type="Texture" id=5]
[ext_resource path="res://MainScene/shutdown.png" type="Texture" id=6]
[ext_resource path="res://MainScene/recycle.png" type="Texture" id=7]
[ext_resource path="res://Font/W95FA.otf" type="DynamicFontData" id=8]
[ext_resource path="res://MainScene/ie.png" type="Texture" id=9]
[ext_resource path="res://MainScene/folder.png" type="Texture" id=10]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

const float PI = 3.14159265359;

uniform vec2 screen_size = vec2(320.0, 180.0);
uniform bool show_curvature = true;
uniform float curvature_x_amount : hint_range(3.0, 15.0, 0.01) = float(6.0); 
uniform float curvature_y_amount : hint_range(3.0, 15.0, 0.01) = float(4.0);
uniform vec4 corner_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform bool show_vignette = true;
uniform float vignette_opacity : hint_range(0.0, 1.0, 0.01) = 0.2;
uniform bool show_horizontal_scan_lines = true;
uniform float horizontal_scan_lines_amount : hint_range(0.0, 180.0, 0.1) = 180.0;
uniform float horizontal_scan_lines_opacity : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform bool show_vertical_scan_lines = false;
uniform float vertical_scan_lines_amount : hint_range(0.0, 320.0, 0.1) = 320.0;
uniform float vertical_scan_lines_opacity : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float boost : hint_range(1.0, 2.0, 0.01) = 1.2;
uniform float aberration_amount : hint_range(0.0, 10.0, 0.01) = 0.0;

vec2 uv_curve(vec2 uv) {
	if (show_curvature) {
		uv = uv * 2.0 - 1.0;
		vec2 offset = abs(uv.yx) / vec2(curvature_x_amount, curvature_y_amount);
		uv = uv + uv * offset * offset;
		uv = uv * 0.5 + 0.5;
	}

	return uv;
}


void fragment() {
	vec2 uv = uv_curve(UV);
	vec2 screen_uv = uv_curve(SCREEN_UV);
	vec3 color = texture(SCREEN_TEXTURE, screen_uv).rgb;

	if (aberration_amount > 0.0) {
		float adjusted_amount = aberration_amount / screen_size.x;
		color.r = texture(SCREEN_TEXTURE, vec2(screen_uv.x + adjusted_amount, screen_uv.y)).r;
		color.g = texture(SCREEN_TEXTURE, screen_uv).g;
		color.b = texture(SCREEN_TEXTURE, vec2(screen_uv.x - adjusted_amount, screen_uv.y)).b;
	}

	if (show_vignette) {
		float vignette = uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y);
		vignette = clamp(pow((screen_size.x / 4.0) * vignette, vignette_opacity), 0.0, 1.0);
		color *= vignette;
	}

	if (show_horizontal_scan_lines) {
		float s = sin(screen_uv.y * horizontal_scan_lines_amount * PI * 2.0);
		s = (s * 0.5 + 0.5) * 0.9 + 0.1;
		vec4 scan_line = vec4(vec3(pow(s, horizontal_scan_lines_opacity)), 1.0);
		color *= scan_line.rgb;
	}

	if (show_vertical_scan_lines) {
		float s = sin(screen_uv.x * vertical_scan_lines_amount * PI * 2.0);
		s = (s * 0.5 + 0.5) * 0.9 + 0.1;
		vec4 scan_line = vec4(vec3(pow(s, vertical_scan_lines_opacity)), 1.0);
		color *= scan_line.rgb;
	}

	if (show_horizontal_scan_lines || show_vertical_scan_lines) {
		color *= boost;
	}

	// Fill the blank space of the corners, left by the curvature, with black.
	if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {
		color = corner_color.rgb;
	}

	COLOR = vec4(color, 1.0);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/screen_size = Vector2( 320, 180 )
shader_param/show_curvature = true
shader_param/curvature_x_amount = 13.93
shader_param/curvature_y_amount = 13.93
shader_param/corner_color = Color( 0, 0, 0, 1 )
shader_param/show_vignette = true
shader_param/vignette_opacity = 0.08
shader_param/show_horizontal_scan_lines = true
shader_param/horizontal_scan_lines_amount = 130.1
shader_param/horizontal_scan_lines_opacity = 0.02
shader_param/show_vertical_scan_lines = false
shader_param/vertical_scan_lines_amount = 320.0
shader_param/vertical_scan_lines_opacity = 1.0
shader_param/boost = 1.11
shader_param/aberration_amount = 0.2

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform int amount = 40;

void fragment()
{
	vec2 grid_uv = round(UV * float(amount)) / float(amount);
	
	vec4 text = texture(TEXTURE, grid_uv);
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/amount = 500

[sub_resource type="DynamicFont" id=3]
font_data = ExtResource( 8 )

[sub_resource type="DynamicFont" id=4]
size = 32
font_data = ExtResource( 8 )

[node name="MainScene" type="Node2D"]
script = ExtResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ScanLines" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 6 )
margin_right = 1024.0
margin_bottom = 600.0
mouse_filter = 2

[node name="BG" type="ColorRect" parent="."]
margin_right = 1024.0
margin_bottom = 600.0
color = Color( 0.00392157, 0.509804, 0.505882, 1 )

[node name="Viewer" type="WindowDialog" parent="."]
visible = true
margin_left = 96.0
margin_top = 112.0
margin_right = 783.0
margin_bottom = 501.0
theme = ExtResource( 3 )
popup_exclusive = true
window_title = "Storyboard"
__meta__ = {
"_edit_group_": true
}

[node name="ViewportContainer" type="ViewportContainer" parent="Viewer"]
material = SubResource( 2 )
margin_left = 7.0
margin_top = 4.0
margin_right = 679.0
margin_bottom = 380.0
stretch = true

[node name="Viewport" type="Viewport" parent="Viewer/ViewportContainer"]
size = Vector2( 672, 376 )
handle_input_locally = false
render_target_update_mode = 3

[node name="SceneHandler" parent="Viewer/ViewportContainer/Viewport" instance=ExtResource( 2 )]

[node name="PopupMenu" type="PopupMenu" parent="."]
margin_top = 496.0
margin_right = 176.0
margin_bottom = 554.0
hide_on_item_selection = false
hide_on_checkable_item_selection = false

[node name="ShutDown" type="Button" parent="PopupMenu"]
margin_left = 8.0
margin_top = 8.0
margin_right = 160.0
margin_bottom = 48.0
text = "SHUT DOWN"
icon = ExtResource( 6 )
expand_icon = true

[node name="NoAccess" type="AcceptDialog" parent="."]
margin_left = 416.0
margin_top = 264.0
margin_right = 608.0
margin_bottom = 328.0
dialog_text = "Access is denied!"

[node name="Recycle Bin" type="TextureButton" parent="."]
margin_left = 16.0
margin_top = 24.0
margin_right = 90.0
margin_bottom = 96.0
rect_pivot_offset = Vector2( 64, 40 )
expand = true

[node name="Label" type="Label" parent="Recycle Bin"]
margin_top = 56.0
margin_right = 74.0
margin_bottom = 72.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 3 )
text = "Recycle Bin"
align = 1

[node name="Sprite" type="Sprite" parent="Recycle Bin"]
position = Vector2( 36, 27 )
scale = Vector2( 3.5, 3.5 )
texture = ExtResource( 7 )

[node name="IE" type="TextureButton" parent="."]
margin_left = 16.0
margin_top = 120.0
margin_right = 88.0
margin_bottom = 211.0
rect_pivot_offset = Vector2( 64, 40 )
expand = true

[node name="Label" type="Label" parent="IE"]
margin_left = -1.0
margin_top = 56.0
margin_right = 73.0
margin_bottom = 91.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 3 )
text = " Internet 
Explorer"
align = 1

[node name="Sprite" type="Sprite" parent="IE"]
position = Vector2( 36, 27 )
scale = Vector2( 3.5, 3.5 )
texture = ExtResource( 9 )

[node name="Data" type="TextureButton" parent="."]
margin_left = 16.0
margin_top = 232.0
margin_right = 88.0
margin_bottom = 323.0
rect_pivot_offset = Vector2( 64, 40 )
expand = true

[node name="Label" type="Label" parent="Data"]
margin_left = -1.0
margin_top = 56.0
margin_right = 73.0
margin_bottom = 91.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 3 )
text = "Storyboard
Data"
align = 1

[node name="Sprite" type="Sprite" parent="Data"]
position = Vector2( 36, 27 )
scale = Vector2( 3.5, 3.5 )
texture = ExtResource( 10 )

[node name="Files" type="WindowDialog" parent="."]
margin_left = 792.0
margin_top = 117.0
margin_right = 1008.0
margin_bottom = 483.0
popup_exclusive = true
window_title = "Storyboard Data"

[node name="Tree" type="Tree" parent="Files"]
margin_right = 216.0
margin_bottom = 366.0
allow_reselect = true
allow_rmb_select = true

[node name="Taskbar" type="Panel" parent="."]
margin_top = 552.0
margin_right = 1024.0
margin_bottom = 600.0
mouse_filter = 2

[node name="Bevel" type="TextEdit" parent="Taskbar"]
margin_left = 889.0
margin_top = 4.0
margin_right = 1021.0
margin_bottom = 43.0
theme = ExtResource( 3 )
readonly = true
selecting_enabled = false

[node name="Time" type="Label" parent="Taskbar"]
margin_left = 862.0
margin_top = 10.0
margin_right = 1013.0
margin_bottom = 41.0
theme = ExtResource( 3 )
custom_fonts/font = SubResource( 4 )
text = "00:00 AM"
align = 2

[node name="VideoButton" type="Button" parent="Taskbar"]
margin_left = 120.0
margin_top = 8.0
margin_right = 248.0
margin_bottom = 40.0
text = "STORYBOARD"
icon = ExtResource( 5 )
expand_icon = true

[node name="StartButton" type="Button" parent="Taskbar"]
margin_left = 8.0
margin_top = 8.0
margin_right = 104.0
margin_bottom = 40.0
text = "START"
icon = ExtResource( 4 )
expand_icon = true

[connection signal="popup_hide" from="Viewer" to="." method="_on_Window_popup_hide"]
[connection signal="pressed" from="PopupMenu/ShutDown" to="." method="_on_ShutDown_pressed"]
[connection signal="pressed" from="Recycle Bin" to="." method="_on_TextureButton_pressed"]
[connection signal="pressed" from="IE" to="." method="_on_TextureButton_pressed"]
[connection signal="pressed" from="Data" to="." method="_on_Data_pressed"]
[connection signal="pressed" from="Taskbar/VideoButton" to="." method="_on_VideoButton_pressed"]
[connection signal="pressed" from="Taskbar/StartButton" to="." method="_on_StartButton_pressed"]
